// Mocks generated by Mockito 5.4.6 from annotations
// in datn_app/test/home_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:convert' as _i18;
import 'dart:io' as _i10;
import 'dart:typed_data' as _i13;

import 'package:audioplayers/audioplayers.dart' as _i6;
import 'package:connectivity_plus/connectivity_plus.dart' as _i16;
import 'package:connectivity_plus_platform_interface/connectivity_plus_platform_interface.dart'
    as _i17;
import 'package:firebase_auth/firebase_auth.dart' as _i4;
import 'package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart'
    as _i3;
import 'package:firebase_core/firebase_core.dart' as _i2;
import 'package:firebase_database/firebase_database.dart' as _i5;
import 'package:firebase_database_platform_interface/firebase_database_platform_interface.dart'
    as _i12;
import 'package:flutter_sound/flutter_sound.dart' as _i14;
import 'package:flutter_sound_platform_interface/flutter_sound_recorder_platform_interface.dart'
    as _i15;
import 'package:http/http.dart' as _i9;
import 'package:logger/logger.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i11;
import 'package:shared_preferences/src/shared_preferences_legacy.dart' as _i19;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseApp_0 extends _i1.SmartFake implements _i2.FirebaseApp {
  _FakeFirebaseApp_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeActionCodeInfo_1 extends _i1.SmartFake
    implements _i3.ActionCodeInfo {
  _FakeActionCodeInfo_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserCredential_2 extends _i1.SmartFake
    implements _i4.UserCredential {
  _FakeUserCredential_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeConfirmationResult_3 extends _i1.SmartFake
    implements _i4.ConfirmationResult {
  _FakeConfirmationResult_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserMetadata_4 extends _i1.SmartFake implements _i3.UserMetadata {
  _FakeUserMetadata_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMultiFactor_5 extends _i1.SmartFake implements _i4.MultiFactor {
  _FakeMultiFactor_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIdTokenResult_6 extends _i1.SmartFake implements _i3.IdTokenResult {
  _FakeIdTokenResult_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUser_7 extends _i1.SmartFake implements _i4.User {
  _FakeUser_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDatabaseReference_8 extends _i1.SmartFake
    implements _i5.DatabaseReference {
  _FakeDatabaseReference_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTransactionResult_9 extends _i1.SmartFake
    implements _i5.TransactionResult {
  _FakeTransactionResult_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeOnDisconnect_10 extends _i1.SmartFake implements _i5.OnDisconnect {
  _FakeOnDisconnect_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDataSnapshot_11 extends _i1.SmartFake implements _i5.DataSnapshot {
  _FakeDataSnapshot_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDatabaseEvent_12 extends _i1.SmartFake implements _i5.DatabaseEvent {
  _FakeDatabaseEvent_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeQuery_13 extends _i1.SmartFake implements _i5.Query {
  _FakeQuery_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAudioCache_14 extends _i1.SmartFake implements _i6.AudioCache {
  _FakeAudioCache_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCompleter_15<T> extends _i1.SmartFake implements _i7.Completer<T> {
  _FakeCompleter_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLogger_16 extends _i1.SmartFake implements _i8.Logger {
  _FakeLogger_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDuration_17 extends _i1.SmartFake implements Duration {
  _FakeDuration_17(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_18 extends _i1.SmartFake implements _i9.Response {
  _FakeResponse_18(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamedResponse_19 extends _i1.SmartFake
    implements _i9.StreamedResponse {
  _FakeStreamedResponse_19(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUri_20 extends _i1.SmartFake implements Uri {
  _FakeUri_20(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDirectory_21 extends _i1.SmartFake implements _i10.Directory {
  _FakeDirectory_21(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFileSystemEntity_22 extends _i1.SmartFake
    implements _i10.FileSystemEntity {
  _FakeFileSystemEntity_22(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFileStat_23 extends _i1.SmartFake implements _i10.FileStat {
  _FakeFileStat_23(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFile_24 extends _i1.SmartFake implements _i10.File {
  _FakeFile_24(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDateTime_25 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_25(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRandomAccessFile_26 extends _i1.SmartFake
    implements _i10.RandomAccessFile {
  _FakeRandomAccessFile_26(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIOSink_27 extends _i1.SmartFake implements _i10.IOSink {
  _FakeIOSink_27(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i4.FirebaseAuth {
  MockFirebaseAuth() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseApp get app =>
      (super.noSuchMethod(
            Invocation.getter(#app),
            returnValue: _FakeFirebaseApp_0(this, Invocation.getter(#app)),
          )
          as _i2.FirebaseApp);

  @override
  set app(_i2.FirebaseApp? _app) => super.noSuchMethod(
    Invocation.setter(#app, _app),
    returnValueForMissingStub: null,
  );

  @override
  set tenantId(String? tenantId) => super.noSuchMethod(
    Invocation.setter(#tenantId, tenantId),
    returnValueForMissingStub: null,
  );

  @override
  set customAuthDomain(String? customAuthDomain) => super.noSuchMethod(
    Invocation.setter(#customAuthDomain, customAuthDomain),
    returnValueForMissingStub: null,
  );

  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(
            Invocation.getter(#pluginConstants),
            returnValue: <dynamic, dynamic>{},
          )
          as Map<dynamic, dynamic>);

  @override
  _i7.Future<void> useAuthEmulator(
    String? host,
    int? port, {
    bool? automaticHostMapping = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #useAuthEmulator,
              [host, port],
              {#automaticHostMapping: automaticHostMapping},
            ),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> applyActionCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#applyActionCode, [code]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i3.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#checkActionCode, [code]),
            returnValue: _i7.Future<_i3.ActionCodeInfo>.value(
              _FakeActionCodeInfo_1(
                this,
                Invocation.method(#checkActionCode, [code]),
              ),
            ),
          )
          as _i7.Future<_i3.ActionCodeInfo>);

  @override
  _i7.Future<void> confirmPasswordReset({
    required String? code,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#confirmPasswordReset, [], {
              #code: code,
              #newPassword: newPassword,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i4.UserCredential> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createUserWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_2(
                this,
                Invocation.method(#createUserWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<List<String>> fetchSignInMethodsForEmail(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#fetchSignInMethodsForEmail, [email]),
            returnValue: _i7.Future<List<String>>.value(<String>[]),
          )
          as _i7.Future<List<String>>);

  @override
  _i7.Future<_i4.UserCredential> getRedirectResult() =>
      (super.noSuchMethod(
            Invocation.method(#getRedirectResult, []),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_2(
                this,
                Invocation.method(#getRedirectResult, []),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  bool isSignInWithEmailLink(String? emailLink) =>
      (super.noSuchMethod(
            Invocation.method(#isSignInWithEmailLink, [emailLink]),
            returnValue: false,
          )
          as bool);

  @override
  _i7.Stream<_i4.User?> authStateChanges() =>
      (super.noSuchMethod(
            Invocation.method(#authStateChanges, []),
            returnValue: _i7.Stream<_i4.User?>.empty(),
          )
          as _i7.Stream<_i4.User?>);

  @override
  _i7.Stream<_i4.User?> idTokenChanges() =>
      (super.noSuchMethod(
            Invocation.method(#idTokenChanges, []),
            returnValue: _i7.Stream<_i4.User?>.empty(),
          )
          as _i7.Stream<_i4.User?>);

  @override
  _i7.Stream<_i4.User?> userChanges() =>
      (super.noSuchMethod(
            Invocation.method(#userChanges, []),
            returnValue: _i7.Stream<_i4.User?>.empty(),
          )
          as _i7.Stream<_i4.User?>);

  @override
  _i7.Future<void> sendPasswordResetEmail({
    required String? email,
    _i3.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendPasswordResetEmail, [], {
              #email: email,
              #actionCodeSettings: actionCodeSettings,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> sendSignInLinkToEmail({
    required String? email,
    required _i3.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendSignInLinkToEmail, [], {
              #email: email,
              #actionCodeSettings: actionCodeSettings,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> setLanguageCode(String? languageCode) =>
      (super.noSuchMethod(
            Invocation.method(#setLanguageCode, [languageCode]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> setSettings({
    bool? appVerificationDisabledForTesting = false,
    String? userAccessGroup,
    String? phoneNumber,
    String? smsCode,
    bool? forceRecaptchaFlow,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#setSettings, [], {
              #appVerificationDisabledForTesting:
                  appVerificationDisabledForTesting,
              #userAccessGroup: userAccessGroup,
              #phoneNumber: phoneNumber,
              #smsCode: smsCode,
              #forceRecaptchaFlow: forceRecaptchaFlow,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> setPersistence(_i3.Persistence? persistence) =>
      (super.noSuchMethod(
            Invocation.method(#setPersistence, [persistence]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i4.UserCredential> signInAnonymously() =>
      (super.noSuchMethod(
            Invocation.method(#signInAnonymously, []),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_2(
                this,
                Invocation.method(#signInAnonymously, []),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithCredential(
    _i3.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithCredential, [credential]),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_2(
                this,
                Invocation.method(#signInWithCredential, [credential]),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithCustomToken, [token]),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_2(
                this,
                Invocation.method(#signInWithCustomToken, [token]),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_2(
                this,
                Invocation.method(#signInWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithEmailLink({
    required String? email,
    required String? emailLink,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailLink, [], {
              #email: email,
              #emailLink: emailLink,
            }),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_2(
                this,
                Invocation.method(#signInWithEmailLink, [], {
                  #email: email,
                  #emailLink: emailLink,
                }),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithProvider(
    _i3.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithProvider, [provider]),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_2(
                this,
                Invocation.method(#signInWithProvider, [provider]),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.ConfirmationResult> signInWithPhoneNumber(
    String? phoneNumber, [
    _i4.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithPhoneNumber, [phoneNumber, verifier]),
            returnValue: _i7.Future<_i4.ConfirmationResult>.value(
              _FakeConfirmationResult_3(
                this,
                Invocation.method(#signInWithPhoneNumber, [
                  phoneNumber,
                  verifier,
                ]),
              ),
            ),
          )
          as _i7.Future<_i4.ConfirmationResult>);

  @override
  _i7.Future<_i4.UserCredential> signInWithPopup(_i3.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithPopup, [provider]),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_2(
                this,
                Invocation.method(#signInWithPopup, [provider]),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<void> signInWithRedirect(_i3.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithRedirect, [provider]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#verifyPasswordResetCode, [code]),
            returnValue: _i7.Future<String>.value(
              _i11.dummyValue<String>(
                this,
                Invocation.method(#verifyPasswordResetCode, [code]),
              ),
            ),
          )
          as _i7.Future<String>);

  @override
  _i7.Future<void> verifyPhoneNumber({
    String? phoneNumber,
    _i3.PhoneMultiFactorInfo? multiFactorInfo,
    required _i3.PhoneVerificationCompleted? verificationCompleted,
    required _i3.PhoneVerificationFailed? verificationFailed,
    required _i3.PhoneCodeSent? codeSent,
    required _i3.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
    String? autoRetrievedSmsCodeForTesting,
    Duration? timeout = const Duration(seconds: 30),
    int? forceResendingToken,
    _i3.MultiFactorSession? multiFactorSession,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#verifyPhoneNumber, [], {
              #phoneNumber: phoneNumber,
              #multiFactorInfo: multiFactorInfo,
              #verificationCompleted: verificationCompleted,
              #verificationFailed: verificationFailed,
              #codeSent: codeSent,
              #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
              #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
              #timeout: timeout,
              #forceResendingToken: forceResendingToken,
              #multiFactorSession: multiFactorSession,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> revokeTokenWithAuthorizationCode(
    String? authorizationCode,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#revokeTokenWithAuthorizationCode, [
              authorizationCode,
            ]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i4.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get emailVerified =>
      (super.noSuchMethod(Invocation.getter(#emailVerified), returnValue: false)
          as bool);

  @override
  bool get isAnonymous =>
      (super.noSuchMethod(Invocation.getter(#isAnonymous), returnValue: false)
          as bool);

  @override
  _i3.UserMetadata get metadata =>
      (super.noSuchMethod(
            Invocation.getter(#metadata),
            returnValue: _FakeUserMetadata_4(
              this,
              Invocation.getter(#metadata),
            ),
          )
          as _i3.UserMetadata);

  @override
  List<_i3.UserInfo> get providerData =>
      (super.noSuchMethod(
            Invocation.getter(#providerData),
            returnValue: <_i3.UserInfo>[],
          )
          as List<_i3.UserInfo>);

  @override
  String get uid =>
      (super.noSuchMethod(
            Invocation.getter(#uid),
            returnValue: _i11.dummyValue<String>(this, Invocation.getter(#uid)),
          )
          as String);

  @override
  _i4.MultiFactor get multiFactor =>
      (super.noSuchMethod(
            Invocation.getter(#multiFactor),
            returnValue: _FakeMultiFactor_5(
              this,
              Invocation.getter(#multiFactor),
            ),
          )
          as _i4.MultiFactor);

  @override
  _i7.Future<void> delete() =>
      (super.noSuchMethod(
            Invocation.method(#delete, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<String?> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdToken, [forceRefresh]),
            returnValue: _i7.Future<String?>.value(),
          )
          as _i7.Future<String?>);

  @override
  _i7.Future<_i3.IdTokenResult> getIdTokenResult([
    bool? forceRefresh = false,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdTokenResult, [forceRefresh]),
            returnValue: _i7.Future<_i3.IdTokenResult>.value(
              _FakeIdTokenResult_6(
                this,
                Invocation.method(#getIdTokenResult, [forceRefresh]),
              ),
            ),
          )
          as _i7.Future<_i3.IdTokenResult>);

  @override
  _i7.Future<_i4.UserCredential> linkWithCredential(
    _i3.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithCredential, [credential]),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_2(
                this,
                Invocation.method(#linkWithCredential, [credential]),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> linkWithProvider(_i3.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithProvider, [provider]),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_2(
                this,
                Invocation.method(#linkWithProvider, [provider]),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> reauthenticateWithProvider(
    _i3.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithProvider, [provider]),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_2(
                this,
                Invocation.method(#reauthenticateWithProvider, [provider]),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> reauthenticateWithPopup(
    _i3.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithPopup, [provider]),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_2(
                this,
                Invocation.method(#reauthenticateWithPopup, [provider]),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<void> reauthenticateWithRedirect(_i3.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithRedirect, [provider]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i4.UserCredential> linkWithPopup(_i3.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPopup, [provider]),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_2(
                this,
                Invocation.method(#linkWithPopup, [provider]),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<void> linkWithRedirect(_i3.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithRedirect, [provider]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i4.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i4.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPhoneNumber, [phoneNumber, verifier]),
            returnValue: _i7.Future<_i4.ConfirmationResult>.value(
              _FakeConfirmationResult_3(
                this,
                Invocation.method(#linkWithPhoneNumber, [
                  phoneNumber,
                  verifier,
                ]),
              ),
            ),
          )
          as _i7.Future<_i4.ConfirmationResult>);

  @override
  _i7.Future<_i4.UserCredential> reauthenticateWithCredential(
    _i3.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithCredential, [credential]),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_2(
                this,
                Invocation.method(#reauthenticateWithCredential, [credential]),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<void> reload() =>
      (super.noSuchMethod(
            Invocation.method(#reload, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> sendEmailVerification([
    _i3.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#sendEmailVerification, [actionCodeSettings]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i4.User> unlink(String? providerId) =>
      (super.noSuchMethod(
            Invocation.method(#unlink, [providerId]),
            returnValue: _i7.Future<_i4.User>.value(
              _FakeUser_7(this, Invocation.method(#unlink, [providerId])),
            ),
          )
          as _i7.Future<_i4.User>);

  @override
  _i7.Future<void> updateEmail(String? newEmail) =>
      (super.noSuchMethod(
            Invocation.method(#updateEmail, [newEmail]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> updatePassword(String? newPassword) =>
      (super.noSuchMethod(
            Invocation.method(#updatePassword, [newPassword]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> updatePhoneNumber(
    _i3.PhoneAuthCredential? phoneCredential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhoneNumber, [phoneCredential]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
            Invocation.method(#updateDisplayName, [displayName]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> updatePhotoURL(String? photoURL) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhotoURL, [photoURL]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> updateProfile({String? displayName, String? photoURL}) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [], {
              #displayName: displayName,
              #photoURL: photoURL,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i3.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#verifyBeforeUpdateEmail, [
              newEmail,
              actionCodeSettings,
            ]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);
}

/// A class which mocks [FirebaseDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseDatabase extends _i1.Mock implements _i5.FirebaseDatabase {
  MockFirebaseDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseApp get app =>
      (super.noSuchMethod(
            Invocation.getter(#app),
            returnValue: _FakeFirebaseApp_0(this, Invocation.getter(#app)),
          )
          as _i2.FirebaseApp);

  @override
  set app(_i2.FirebaseApp? _app) => super.noSuchMethod(
    Invocation.setter(#app, _app),
    returnValueForMissingStub: null,
  );

  @override
  set databaseURL(String? _databaseURL) => super.noSuchMethod(
    Invocation.setter(#databaseURL, _databaseURL),
    returnValueForMissingStub: null,
  );

  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(
            Invocation.getter(#pluginConstants),
            returnValue: <dynamic, dynamic>{},
          )
          as Map<dynamic, dynamic>);

  @override
  void useDatabaseEmulator(
    String? host,
    int? port, {
    bool? automaticHostMapping = true,
  }) => super.noSuchMethod(
    Invocation.method(
      #useDatabaseEmulator,
      [host, port],
      {#automaticHostMapping: automaticHostMapping},
    ),
    returnValueForMissingStub: null,
  );

  @override
  _i5.DatabaseReference ref([String? path]) =>
      (super.noSuchMethod(
            Invocation.method(#ref, [path]),
            returnValue: _FakeDatabaseReference_8(
              this,
              Invocation.method(#ref, [path]),
            ),
          )
          as _i5.DatabaseReference);

  @override
  _i5.DatabaseReference refFromURL(String? url) =>
      (super.noSuchMethod(
            Invocation.method(#refFromURL, [url]),
            returnValue: _FakeDatabaseReference_8(
              this,
              Invocation.method(#refFromURL, [url]),
            ),
          )
          as _i5.DatabaseReference);

  @override
  void setPersistenceEnabled(bool? enabled) => super.noSuchMethod(
    Invocation.method(#setPersistenceEnabled, [enabled]),
    returnValueForMissingStub: null,
  );

  @override
  void setPersistenceCacheSizeBytes(int? cacheSize) => super.noSuchMethod(
    Invocation.method(#setPersistenceCacheSizeBytes, [cacheSize]),
    returnValueForMissingStub: null,
  );

  @override
  void setLoggingEnabled(bool? enabled) => super.noSuchMethod(
    Invocation.method(#setLoggingEnabled, [enabled]),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<void> goOnline() =>
      (super.noSuchMethod(
            Invocation.method(#goOnline, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> goOffline() =>
      (super.noSuchMethod(
            Invocation.method(#goOffline, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> purgeOutstandingWrites() =>
      (super.noSuchMethod(
            Invocation.method(#purgeOutstandingWrites, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);
}

/// A class which mocks [DatabaseReference].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseReference extends _i1.Mock implements _i5.DatabaseReference {
  MockDatabaseReference() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.DatabaseReference get root =>
      (super.noSuchMethod(
            Invocation.getter(#root),
            returnValue: _FakeDatabaseReference_8(
              this,
              Invocation.getter(#root),
            ),
          )
          as _i5.DatabaseReference);

  @override
  _i5.DatabaseReference get ref =>
      (super.noSuchMethod(
            Invocation.getter(#ref),
            returnValue: _FakeDatabaseReference_8(
              this,
              Invocation.getter(#ref),
            ),
          )
          as _i5.DatabaseReference);

  @override
  String get path =>
      (super.noSuchMethod(
            Invocation.getter(#path),
            returnValue: _i11.dummyValue<String>(
              this,
              Invocation.getter(#path),
            ),
          )
          as String);

  @override
  _i7.Stream<_i5.DatabaseEvent> get onChildAdded =>
      (super.noSuchMethod(
            Invocation.getter(#onChildAdded),
            returnValue: _i7.Stream<_i5.DatabaseEvent>.empty(),
          )
          as _i7.Stream<_i5.DatabaseEvent>);

  @override
  _i7.Stream<_i5.DatabaseEvent> get onChildRemoved =>
      (super.noSuchMethod(
            Invocation.getter(#onChildRemoved),
            returnValue: _i7.Stream<_i5.DatabaseEvent>.empty(),
          )
          as _i7.Stream<_i5.DatabaseEvent>);

  @override
  _i7.Stream<_i5.DatabaseEvent> get onChildChanged =>
      (super.noSuchMethod(
            Invocation.getter(#onChildChanged),
            returnValue: _i7.Stream<_i5.DatabaseEvent>.empty(),
          )
          as _i7.Stream<_i5.DatabaseEvent>);

  @override
  _i7.Stream<_i5.DatabaseEvent> get onChildMoved =>
      (super.noSuchMethod(
            Invocation.getter(#onChildMoved),
            returnValue: _i7.Stream<_i5.DatabaseEvent>.empty(),
          )
          as _i7.Stream<_i5.DatabaseEvent>);

  @override
  _i7.Stream<_i5.DatabaseEvent> get onValue =>
      (super.noSuchMethod(
            Invocation.getter(#onValue),
            returnValue: _i7.Stream<_i5.DatabaseEvent>.empty(),
          )
          as _i7.Stream<_i5.DatabaseEvent>);

  @override
  _i5.DatabaseReference child(String? path) =>
      (super.noSuchMethod(
            Invocation.method(#child, [path]),
            returnValue: _FakeDatabaseReference_8(
              this,
              Invocation.method(#child, [path]),
            ),
          )
          as _i5.DatabaseReference);

  @override
  _i5.DatabaseReference push() =>
      (super.noSuchMethod(
            Invocation.method(#push, []),
            returnValue: _FakeDatabaseReference_8(
              this,
              Invocation.method(#push, []),
            ),
          )
          as _i5.DatabaseReference);

  @override
  _i7.Future<void> set(Object? value) =>
      (super.noSuchMethod(
            Invocation.method(#set, [value]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> setWithPriority(Object? value, Object? priority) =>
      (super.noSuchMethod(
            Invocation.method(#setWithPriority, [value, priority]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> update(Map<String, Object?>? value) =>
      (super.noSuchMethod(
            Invocation.method(#update, [value]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> setPriority(Object? priority) =>
      (super.noSuchMethod(
            Invocation.method(#setPriority, [priority]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> remove() =>
      (super.noSuchMethod(
            Invocation.method(#remove, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i5.TransactionResult> runTransaction(
    _i12.TransactionHandler? transactionHandler, {
    bool? applyLocally = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #runTransaction,
              [transactionHandler],
              {#applyLocally: applyLocally},
            ),
            returnValue: _i7.Future<_i5.TransactionResult>.value(
              _FakeTransactionResult_9(
                this,
                Invocation.method(
                  #runTransaction,
                  [transactionHandler],
                  {#applyLocally: applyLocally},
                ),
              ),
            ),
          )
          as _i7.Future<_i5.TransactionResult>);

  @override
  _i5.OnDisconnect onDisconnect() =>
      (super.noSuchMethod(
            Invocation.method(#onDisconnect, []),
            returnValue: _FakeOnDisconnect_10(
              this,
              Invocation.method(#onDisconnect, []),
            ),
          )
          as _i5.OnDisconnect);

  @override
  _i7.Future<_i5.DataSnapshot> get() =>
      (super.noSuchMethod(
            Invocation.method(#get, []),
            returnValue: _i7.Future<_i5.DataSnapshot>.value(
              _FakeDataSnapshot_11(this, Invocation.method(#get, [])),
            ),
          )
          as _i7.Future<_i5.DataSnapshot>);

  @override
  _i7.Future<_i5.DatabaseEvent> once([
    _i12.DatabaseEventType? eventType = _i12.DatabaseEventType.value,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#once, [eventType]),
            returnValue: _i7.Future<_i5.DatabaseEvent>.value(
              _FakeDatabaseEvent_12(
                this,
                Invocation.method(#once, [eventType]),
              ),
            ),
          )
          as _i7.Future<_i5.DatabaseEvent>);

  @override
  _i5.Query startAt(Object? value, {String? key}) =>
      (super.noSuchMethod(
            Invocation.method(#startAt, [value], {#key: key}),
            returnValue: _FakeQuery_13(
              this,
              Invocation.method(#startAt, [value], {#key: key}),
            ),
          )
          as _i5.Query);

  @override
  _i5.Query startAfter(Object? value, {String? key}) =>
      (super.noSuchMethod(
            Invocation.method(#startAfter, [value], {#key: key}),
            returnValue: _FakeQuery_13(
              this,
              Invocation.method(#startAfter, [value], {#key: key}),
            ),
          )
          as _i5.Query);

  @override
  _i5.Query endAt(Object? value, {String? key}) =>
      (super.noSuchMethod(
            Invocation.method(#endAt, [value], {#key: key}),
            returnValue: _FakeQuery_13(
              this,
              Invocation.method(#endAt, [value], {#key: key}),
            ),
          )
          as _i5.Query);

  @override
  _i5.Query endBefore(Object? value, {String? key}) =>
      (super.noSuchMethod(
            Invocation.method(#endBefore, [value], {#key: key}),
            returnValue: _FakeQuery_13(
              this,
              Invocation.method(#endBefore, [value], {#key: key}),
            ),
          )
          as _i5.Query);

  @override
  _i5.Query equalTo(Object? value, {String? key}) =>
      (super.noSuchMethod(
            Invocation.method(#equalTo, [value], {#key: key}),
            returnValue: _FakeQuery_13(
              this,
              Invocation.method(#equalTo, [value], {#key: key}),
            ),
          )
          as _i5.Query);

  @override
  _i5.Query limitToFirst(int? limit) =>
      (super.noSuchMethod(
            Invocation.method(#limitToFirst, [limit]),
            returnValue: _FakeQuery_13(
              this,
              Invocation.method(#limitToFirst, [limit]),
            ),
          )
          as _i5.Query);

  @override
  _i5.Query limitToLast(int? limit) =>
      (super.noSuchMethod(
            Invocation.method(#limitToLast, [limit]),
            returnValue: _FakeQuery_13(
              this,
              Invocation.method(#limitToLast, [limit]),
            ),
          )
          as _i5.Query);

  @override
  _i5.Query orderByChild(String? path) =>
      (super.noSuchMethod(
            Invocation.method(#orderByChild, [path]),
            returnValue: _FakeQuery_13(
              this,
              Invocation.method(#orderByChild, [path]),
            ),
          )
          as _i5.Query);

  @override
  _i5.Query orderByKey() =>
      (super.noSuchMethod(
            Invocation.method(#orderByKey, []),
            returnValue: _FakeQuery_13(
              this,
              Invocation.method(#orderByKey, []),
            ),
          )
          as _i5.Query);

  @override
  _i5.Query orderByValue() =>
      (super.noSuchMethod(
            Invocation.method(#orderByValue, []),
            returnValue: _FakeQuery_13(
              this,
              Invocation.method(#orderByValue, []),
            ),
          )
          as _i5.Query);

  @override
  _i5.Query orderByPriority() =>
      (super.noSuchMethod(
            Invocation.method(#orderByPriority, []),
            returnValue: _FakeQuery_13(
              this,
              Invocation.method(#orderByPriority, []),
            ),
          )
          as _i5.Query);

  @override
  _i7.Future<void> keepSynced(bool? value) =>
      (super.noSuchMethod(
            Invocation.method(#keepSynced, [value]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);
}

/// A class which mocks [DataSnapshot].
///
/// See the documentation for Mockito's code generation for more information.
class MockDataSnapshot extends _i1.Mock implements _i5.DataSnapshot {
  MockDataSnapshot() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.DatabaseReference get ref =>
      (super.noSuchMethod(
            Invocation.getter(#ref),
            returnValue: _FakeDatabaseReference_8(
              this,
              Invocation.getter(#ref),
            ),
          )
          as _i5.DatabaseReference);

  @override
  bool get exists =>
      (super.noSuchMethod(Invocation.getter(#exists), returnValue: false)
          as bool);

  @override
  Iterable<_i5.DataSnapshot> get children =>
      (super.noSuchMethod(
            Invocation.getter(#children),
            returnValue: <_i5.DataSnapshot>[],
          )
          as Iterable<_i5.DataSnapshot>);

  @override
  bool hasChild(String? path) =>
      (super.noSuchMethod(
            Invocation.method(#hasChild, [path]),
            returnValue: false,
          )
          as bool);

  @override
  _i5.DataSnapshot child(String? path) =>
      (super.noSuchMethod(
            Invocation.method(#child, [path]),
            returnValue: _FakeDataSnapshot_11(
              this,
              Invocation.method(#child, [path]),
            ),
          )
          as _i5.DataSnapshot);
}

/// A class which mocks [DatabaseEvent].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseEvent extends _i1.Mock implements _i5.DatabaseEvent {
  MockDatabaseEvent() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.DatabaseEventType get type =>
      (super.noSuchMethod(
            Invocation.getter(#type),
            returnValue: _i12.DatabaseEventType.childAdded,
          )
          as _i12.DatabaseEventType);

  @override
  _i5.DataSnapshot get snapshot =>
      (super.noSuchMethod(
            Invocation.getter(#snapshot),
            returnValue: _FakeDataSnapshot_11(
              this,
              Invocation.getter(#snapshot),
            ),
          )
          as _i5.DataSnapshot);
}

/// A class which mocks [AudioPlayer].
///
/// See the documentation for Mockito's code generation for more information.
class MockAudioPlayer extends _i1.Mock implements _i6.AudioPlayer {
  MockAudioPlayer() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.AudioCache get audioCache =>
      (super.noSuchMethod(
            Invocation.getter(#audioCache),
            returnValue: _FakeAudioCache_14(
              this,
              Invocation.getter(#audioCache),
            ),
          )
          as _i6.AudioCache);

  @override
  String get playerId =>
      (super.noSuchMethod(
            Invocation.getter(#playerId),
            returnValue: _i11.dummyValue<String>(
              this,
              Invocation.getter(#playerId),
            ),
          )
          as String);

  @override
  _i6.PlayerState get desiredState =>
      (super.noSuchMethod(
            Invocation.getter(#desiredState),
            returnValue: _i6.PlayerState.stopped,
          )
          as _i6.PlayerState);

  @override
  _i7.Completer<void> get creatingCompleter =>
      (super.noSuchMethod(
            Invocation.getter(#creatingCompleter),
            returnValue: _FakeCompleter_15<void>(
              this,
              Invocation.getter(#creatingCompleter),
            ),
          )
          as _i7.Completer<void>);

  @override
  double get volume =>
      (super.noSuchMethod(Invocation.getter(#volume), returnValue: 0.0)
          as double);

  @override
  double get balance =>
      (super.noSuchMethod(Invocation.getter(#balance), returnValue: 0.0)
          as double);

  @override
  double get playbackRate =>
      (super.noSuchMethod(Invocation.getter(#playbackRate), returnValue: 0.0)
          as double);

  @override
  _i6.PlayerMode get mode =>
      (super.noSuchMethod(
            Invocation.getter(#mode),
            returnValue: _i6.PlayerMode.mediaPlayer,
          )
          as _i6.PlayerMode);

  @override
  _i6.ReleaseMode get releaseMode =>
      (super.noSuchMethod(
            Invocation.getter(#releaseMode),
            returnValue: _i6.ReleaseMode.release,
          )
          as _i6.ReleaseMode);

  @override
  _i6.PlayerState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _i6.PlayerState.stopped,
          )
          as _i6.PlayerState);

  @override
  _i7.Stream<_i6.AudioEvent> get eventStream =>
      (super.noSuchMethod(
            Invocation.getter(#eventStream),
            returnValue: _i7.Stream<_i6.AudioEvent>.empty(),
          )
          as _i7.Stream<_i6.AudioEvent>);

  @override
  _i7.Stream<_i6.PlayerState> get onPlayerStateChanged =>
      (super.noSuchMethod(
            Invocation.getter(#onPlayerStateChanged),
            returnValue: _i7.Stream<_i6.PlayerState>.empty(),
          )
          as _i7.Stream<_i6.PlayerState>);

  @override
  _i7.Stream<Duration> get onPositionChanged =>
      (super.noSuchMethod(
            Invocation.getter(#onPositionChanged),
            returnValue: _i7.Stream<Duration>.empty(),
          )
          as _i7.Stream<Duration>);

  @override
  _i7.Stream<Duration> get onDurationChanged =>
      (super.noSuchMethod(
            Invocation.getter(#onDurationChanged),
            returnValue: _i7.Stream<Duration>.empty(),
          )
          as _i7.Stream<Duration>);

  @override
  _i7.Stream<void> get onPlayerComplete =>
      (super.noSuchMethod(
            Invocation.getter(#onPlayerComplete),
            returnValue: _i7.Stream<void>.empty(),
          )
          as _i7.Stream<void>);

  @override
  _i7.Stream<void> get onSeekComplete =>
      (super.noSuchMethod(
            Invocation.getter(#onSeekComplete),
            returnValue: _i7.Stream<void>.empty(),
          )
          as _i7.Stream<void>);

  @override
  _i7.Stream<String> get onLog =>
      (super.noSuchMethod(
            Invocation.getter(#onLog),
            returnValue: _i7.Stream<String>.empty(),
          )
          as _i7.Stream<String>);

  @override
  set audioCache(_i6.AudioCache? _audioCache) => super.noSuchMethod(
    Invocation.setter(#audioCache, _audioCache),
    returnValueForMissingStub: null,
  );

  @override
  set desiredState(_i6.PlayerState? _desiredState) => super.noSuchMethod(
    Invocation.setter(#desiredState, _desiredState),
    returnValueForMissingStub: null,
  );

  @override
  set state(_i6.PlayerState? state) => super.noSuchMethod(
    Invocation.setter(#state, state),
    returnValueForMissingStub: null,
  );

  @override
  set positionUpdater(_i6.PositionUpdater? positionUpdater) =>
      super.noSuchMethod(
        Invocation.setter(#positionUpdater, positionUpdater),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> play(
    _i6.Source? source, {
    double? volume,
    double? balance,
    _i6.AudioContext? ctx,
    Duration? position,
    _i6.PlayerMode? mode,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #play,
              [source],
              {
                #volume: volume,
                #balance: balance,
                #ctx: ctx,
                #position: position,
                #mode: mode,
              },
            ),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> setAudioContext(_i6.AudioContext? ctx) =>
      (super.noSuchMethod(
            Invocation.method(#setAudioContext, [ctx]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> setPlayerMode(_i6.PlayerMode? mode) =>
      (super.noSuchMethod(
            Invocation.method(#setPlayerMode, [mode]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> pause() =>
      (super.noSuchMethod(
            Invocation.method(#pause, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> stop() =>
      (super.noSuchMethod(
            Invocation.method(#stop, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> resume() =>
      (super.noSuchMethod(
            Invocation.method(#resume, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> release() =>
      (super.noSuchMethod(
            Invocation.method(#release, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> seek(Duration? position) =>
      (super.noSuchMethod(
            Invocation.method(#seek, [position]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> setBalance(double? balance) =>
      (super.noSuchMethod(
            Invocation.method(#setBalance, [balance]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> setVolume(double? volume) =>
      (super.noSuchMethod(
            Invocation.method(#setVolume, [volume]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> setReleaseMode(_i6.ReleaseMode? releaseMode) =>
      (super.noSuchMethod(
            Invocation.method(#setReleaseMode, [releaseMode]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> setPlaybackRate(double? playbackRate) =>
      (super.noSuchMethod(
            Invocation.method(#setPlaybackRate, [playbackRate]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> setSource(_i6.Source? source) =>
      (super.noSuchMethod(
            Invocation.method(#setSource, [source]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> setSourceUrl(String? url, {String? mimeType}) =>
      (super.noSuchMethod(
            Invocation.method(#setSourceUrl, [url], {#mimeType: mimeType}),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> setSourceDeviceFile(String? path, {String? mimeType}) =>
      (super.noSuchMethod(
            Invocation.method(
              #setSourceDeviceFile,
              [path],
              {#mimeType: mimeType},
            ),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> setSourceAsset(String? path, {String? mimeType}) =>
      (super.noSuchMethod(
            Invocation.method(#setSourceAsset, [path], {#mimeType: mimeType}),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> setSourceBytes(_i13.Uint8List? bytes, {String? mimeType}) =>
      (super.noSuchMethod(
            Invocation.method(#setSourceBytes, [bytes], {#mimeType: mimeType}),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<Duration?> getDuration() =>
      (super.noSuchMethod(
            Invocation.method(#getDuration, []),
            returnValue: _i7.Future<Duration?>.value(),
          )
          as _i7.Future<Duration?>);

  @override
  _i7.Future<Duration?> getCurrentPosition() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentPosition, []),
            returnValue: _i7.Future<Duration?>.value(),
          )
          as _i7.Future<Duration?>);

  @override
  _i7.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);
}

/// A class which mocks [FlutterSoundRecorder].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterSoundRecorder extends _i1.Mock
    implements _i14.FlutterSoundRecorder {
  MockFlutterSoundRecorder() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Logger get logger =>
      (super.noSuchMethod(
            Invocation.getter(#logger),
            returnValue: _FakeLogger_16(this, Invocation.getter(#logger)),
          )
          as _i8.Logger);

  @override
  _i15.RecorderState get recorderState =>
      (super.noSuchMethod(
            Invocation.getter(#recorderState),
            returnValue: _i15.RecorderState.isStopped,
          )
          as _i15.RecorderState);

  @override
  bool get isRecording =>
      (super.noSuchMethod(Invocation.getter(#isRecording), returnValue: false)
          as bool);

  @override
  bool get isStopped =>
      (super.noSuchMethod(Invocation.getter(#isStopped), returnValue: false)
          as bool);

  @override
  bool get isPaused =>
      (super.noSuchMethod(Invocation.getter(#isPaused), returnValue: false)
          as bool);

  @override
  void setLogLevel(_i8.Level? aLevel) => super.noSuchMethod(
    Invocation.method(#setLogLevel, [aLevel]),
    returnValueForMissingStub: null,
  );

  @override
  void interleavedRecording({required _i13.Uint8List? data}) =>
      super.noSuchMethod(
        Invocation.method(#interleavedRecording, [], {#data: data}),
        returnValueForMissingStub: null,
      );

  @override
  void recordingDataFloat32({required List<_i13.Float32List>? data}) =>
      super.noSuchMethod(
        Invocation.method(#recordingDataFloat32, [], {#data: data}),
        returnValueForMissingStub: null,
      );

  @override
  void recordingDataInt16({required List<_i13.Int16List>? data}) =>
      super.noSuchMethod(
        Invocation.method(#recordingDataInt16, [], {#data: data}),
        returnValueForMissingStub: null,
      );

  @override
  void updateRecorderProgress({int? duration, double? dbPeakLevel}) =>
      super.noSuchMethod(
        Invocation.method(#updateRecorderProgress, [], {
          #duration: duration,
          #dbPeakLevel: dbPeakLevel,
        }),
        returnValueForMissingStub: null,
      );

  @override
  void openRecorderCompleted(int? state, bool? success) => super.noSuchMethod(
    Invocation.method(#openRecorderCompleted, [state, success]),
    returnValueForMissingStub: null,
  );

  @override
  void pauseRecorderCompleted(int? state, bool? success) => super.noSuchMethod(
    Invocation.method(#pauseRecorderCompleted, [state, success]),
    returnValueForMissingStub: null,
  );

  @override
  void resumeRecorderCompleted(int? state, bool? success) => super.noSuchMethod(
    Invocation.method(#resumeRecorderCompleted, [state, success]),
    returnValueForMissingStub: null,
  );

  @override
  void startRecorderCompleted(int? state, bool? success) => super.noSuchMethod(
    Invocation.method(#startRecorderCompleted, [state, success]),
    returnValueForMissingStub: null,
  );

  @override
  void stopRecorderCompleted(int? state, bool? success, String? url) =>
      super.noSuchMethod(
        Invocation.method(#stopRecorderCompleted, [state, success, url]),
        returnValueForMissingStub: null,
      );

  @override
  void log(_i8.Level? logLevel, String? msg) => super.noSuchMethod(
    Invocation.method(#log, [logLevel, msg]),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<_i14.FlutterSoundRecorder?> openRecorder({
    dynamic isBGService = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#openRecorder, [], {#isBGService: isBGService}),
            returnValue: _i7.Future<_i14.FlutterSoundRecorder?>.value(),
          )
          as _i7.Future<_i14.FlutterSoundRecorder?>);

  @override
  _i7.Future<void> closeRecorder() =>
      (super.noSuchMethod(
            Invocation.method(#closeRecorder, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<bool> isEncoderSupported(_i14.Codec? codec) =>
      (super.noSuchMethod(
            Invocation.method(#isEncoderSupported, [codec]),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<void> setSubscriptionDuration(Duration? duration) =>
      (super.noSuchMethod(
            Invocation.method(#setSubscriptionDuration, [duration]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  Duration getSubscriptionDuration() =>
      (super.noSuchMethod(
            Invocation.method(#getSubscriptionDuration, []),
            returnValue: _FakeDuration_17(
              this,
              Invocation.method(#getSubscriptionDuration, []),
            ),
          )
          as Duration);

  @override
  _i7.Future<void> startRecorder({
    _i14.Codec? codec = _i14.Codec.defaultCodec,
    String? toFile,
    _i7.StreamSink<List<_i13.Float32List>>? toStreamFloat32,
    _i7.StreamSink<List<_i13.Int16List>>? toStreamInt16,
    _i7.StreamSink<_i13.Uint8List>? toStream,
    int? sampleRate,
    int? numChannels = 1,
    int? bitRate = 16000,
    int? bufferSize = 8192,
    bool? enableVoiceProcessing = false,
    _i14.AudioSource? audioSource = _i14.AudioSource.defaultSource,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#startRecorder, [], {
              #codec: codec,
              #toFile: toFile,
              #toStreamFloat32: toStreamFloat32,
              #toStreamInt16: toStreamInt16,
              #toStream: toStream,
              #sampleRate: sampleRate,
              #numChannels: numChannels,
              #bitRate: bitRate,
              #bufferSize: bufferSize,
              #enableVoiceProcessing: enableVoiceProcessing,
              #audioSource: audioSource,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<String?> stopRecorder() =>
      (super.noSuchMethod(
            Invocation.method(#stopRecorder, []),
            returnValue: _i7.Future<String?>.value(),
          )
          as _i7.Future<String?>);

  @override
  void requestData() => super.noSuchMethod(
    Invocation.method(#requestData, []),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<int> getSampleRate() =>
      (super.noSuchMethod(
            Invocation.method(#getSampleRate, []),
            returnValue: _i7.Future<int>.value(0),
          )
          as _i7.Future<int>);

  @override
  _i7.Future<void> pauseRecorder() =>
      (super.noSuchMethod(
            Invocation.method(#pauseRecorder, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> resumeRecorder() =>
      (super.noSuchMethod(
            Invocation.method(#resumeRecorder, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<bool?> deleteRecord({required String? fileName}) =>
      (super.noSuchMethod(
            Invocation.method(#deleteRecord, [], {#fileName: fileName}),
            returnValue: _i7.Future<bool?>.value(),
          )
          as _i7.Future<bool?>);

  @override
  _i7.Future<String?> getRecordURL({required String? path}) =>
      (super.noSuchMethod(
            Invocation.method(#getRecordURL, [], {#path: path}),
            returnValue: _i7.Future<String?>.value(),
          )
          as _i7.Future<String?>);
}

/// A class which mocks [Connectivity].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivity extends _i1.Mock implements _i16.Connectivity {
  MockConnectivity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Stream<List<_i17.ConnectivityResult>> get onConnectivityChanged =>
      (super.noSuchMethod(
            Invocation.getter(#onConnectivityChanged),
            returnValue: _i7.Stream<List<_i17.ConnectivityResult>>.empty(),
          )
          as _i7.Stream<List<_i17.ConnectivityResult>>);

  @override
  _i7.Future<List<_i17.ConnectivityResult>> checkConnectivity() =>
      (super.noSuchMethod(
            Invocation.method(#checkConnectivity, []),
            returnValue: _i7.Future<List<_i17.ConnectivityResult>>.value(
              <_i17.ConnectivityResult>[],
            ),
          )
          as _i7.Future<List<_i17.ConnectivityResult>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i9.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i9.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#head, [url], {#headers: headers}),
            returnValue: _i7.Future<_i9.Response>.value(
              _FakeResponse_18(
                this,
                Invocation.method(#head, [url], {#headers: headers}),
              ),
            ),
          )
          as _i7.Future<_i9.Response>);

  @override
  _i7.Future<_i9.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#get, [url], {#headers: headers}),
            returnValue: _i7.Future<_i9.Response>.value(
              _FakeResponse_18(
                this,
                Invocation.method(#get, [url], {#headers: headers}),
              ),
            ),
          )
          as _i7.Future<_i9.Response>);

  @override
  _i7.Future<_i9.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i18.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i7.Future<_i9.Response>.value(
              _FakeResponse_18(
                this,
                Invocation.method(
                  #post,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i7.Future<_i9.Response>);

  @override
  _i7.Future<_i9.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i18.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i7.Future<_i9.Response>.value(
              _FakeResponse_18(
                this,
                Invocation.method(
                  #put,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i7.Future<_i9.Response>);

  @override
  _i7.Future<_i9.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i18.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i7.Future<_i9.Response>.value(
              _FakeResponse_18(
                this,
                Invocation.method(
                  #patch,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i7.Future<_i9.Response>);

  @override
  _i7.Future<_i9.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i18.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i7.Future<_i9.Response>.value(
              _FakeResponse_18(
                this,
                Invocation.method(
                  #delete,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i7.Future<_i9.Response>);

  @override
  _i7.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#read, [url], {#headers: headers}),
            returnValue: _i7.Future<String>.value(
              _i11.dummyValue<String>(
                this,
                Invocation.method(#read, [url], {#headers: headers}),
              ),
            ),
          )
          as _i7.Future<String>);

  @override
  _i7.Future<_i13.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readBytes, [url], {#headers: headers}),
            returnValue: _i7.Future<_i13.Uint8List>.value(_i13.Uint8List(0)),
          )
          as _i7.Future<_i13.Uint8List>);

  @override
  _i7.Future<_i9.StreamedResponse> send(_i9.BaseRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#send, [request]),
            returnValue: _i7.Future<_i9.StreamedResponse>.value(
              _FakeStreamedResponse_19(
                this,
                Invocation.method(#send, [request]),
              ),
            ),
          )
          as _i7.Future<_i9.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
    Invocation.method(#close, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i19.SharedPreferences {
  MockSharedPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Set<String> getKeys() =>
      (super.noSuchMethod(
            Invocation.method(#getKeys, []),
            returnValue: <String>{},
          )
          as Set<String>);

  @override
  Object? get(String? key) =>
      (super.noSuchMethod(Invocation.method(#get, [key])) as Object?);

  @override
  bool? getBool(String? key) =>
      (super.noSuchMethod(Invocation.method(#getBool, [key])) as bool?);

  @override
  int? getInt(String? key) =>
      (super.noSuchMethod(Invocation.method(#getInt, [key])) as int?);

  @override
  double? getDouble(String? key) =>
      (super.noSuchMethod(Invocation.method(#getDouble, [key])) as double?);

  @override
  String? getString(String? key) =>
      (super.noSuchMethod(Invocation.method(#getString, [key])) as String?);

  @override
  bool containsKey(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#containsKey, [key]),
            returnValue: false,
          )
          as bool);

  @override
  List<String>? getStringList(String? key) =>
      (super.noSuchMethod(Invocation.method(#getStringList, [key]))
          as List<String>?);

  @override
  _i7.Future<bool> setBool(String? key, bool? value) =>
      (super.noSuchMethod(
            Invocation.method(#setBool, [key, value]),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<bool> setInt(String? key, int? value) =>
      (super.noSuchMethod(
            Invocation.method(#setInt, [key, value]),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<bool> setDouble(String? key, double? value) =>
      (super.noSuchMethod(
            Invocation.method(#setDouble, [key, value]),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<bool> setString(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#setString, [key, value]),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<bool> setStringList(String? key, List<String>? value) =>
      (super.noSuchMethod(
            Invocation.method(#setStringList, [key, value]),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<bool> remove(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#remove, [key]),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<bool> commit() =>
      (super.noSuchMethod(
            Invocation.method(#commit, []),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<bool> clear() =>
      (super.noSuchMethod(
            Invocation.method(#clear, []),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<void> reload() =>
      (super.noSuchMethod(
            Invocation.method(#reload, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);
}

/// A class which mocks [Directory].
///
/// See the documentation for Mockito's code generation for more information.
class MockDirectory extends _i1.Mock implements _i10.Directory {
  MockDirectory() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get path =>
      (super.noSuchMethod(
            Invocation.getter(#path),
            returnValue: _i11.dummyValue<String>(
              this,
              Invocation.getter(#path),
            ),
          )
          as String);

  @override
  Uri get uri =>
      (super.noSuchMethod(
            Invocation.getter(#uri),
            returnValue: _FakeUri_20(this, Invocation.getter(#uri)),
          )
          as Uri);

  @override
  _i10.Directory get absolute =>
      (super.noSuchMethod(
            Invocation.getter(#absolute),
            returnValue: _FakeDirectory_21(this, Invocation.getter(#absolute)),
          )
          as _i10.Directory);

  @override
  bool get isAbsolute =>
      (super.noSuchMethod(Invocation.getter(#isAbsolute), returnValue: false)
          as bool);

  @override
  _i10.Directory get parent =>
      (super.noSuchMethod(
            Invocation.getter(#parent),
            returnValue: _FakeDirectory_21(this, Invocation.getter(#parent)),
          )
          as _i10.Directory);

  @override
  _i7.Future<_i10.Directory> create({bool? recursive = false}) =>
      (super.noSuchMethod(
            Invocation.method(#create, [], {#recursive: recursive}),
            returnValue: _i7.Future<_i10.Directory>.value(
              _FakeDirectory_21(
                this,
                Invocation.method(#create, [], {#recursive: recursive}),
              ),
            ),
          )
          as _i7.Future<_i10.Directory>);

  @override
  void createSync({bool? recursive = false}) => super.noSuchMethod(
    Invocation.method(#createSync, [], {#recursive: recursive}),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<_i10.Directory> createTemp([String? prefix]) =>
      (super.noSuchMethod(
            Invocation.method(#createTemp, [prefix]),
            returnValue: _i7.Future<_i10.Directory>.value(
              _FakeDirectory_21(this, Invocation.method(#createTemp, [prefix])),
            ),
          )
          as _i7.Future<_i10.Directory>);

  @override
  _i10.Directory createTempSync([String? prefix]) =>
      (super.noSuchMethod(
            Invocation.method(#createTempSync, [prefix]),
            returnValue: _FakeDirectory_21(
              this,
              Invocation.method(#createTempSync, [prefix]),
            ),
          )
          as _i10.Directory);

  @override
  _i7.Future<String> resolveSymbolicLinks() =>
      (super.noSuchMethod(
            Invocation.method(#resolveSymbolicLinks, []),
            returnValue: _i7.Future<String>.value(
              _i11.dummyValue<String>(
                this,
                Invocation.method(#resolveSymbolicLinks, []),
              ),
            ),
          )
          as _i7.Future<String>);

  @override
  String resolveSymbolicLinksSync() =>
      (super.noSuchMethod(
            Invocation.method(#resolveSymbolicLinksSync, []),
            returnValue: _i11.dummyValue<String>(
              this,
              Invocation.method(#resolveSymbolicLinksSync, []),
            ),
          )
          as String);

  @override
  _i7.Future<_i10.Directory> rename(String? newPath) =>
      (super.noSuchMethod(
            Invocation.method(#rename, [newPath]),
            returnValue: _i7.Future<_i10.Directory>.value(
              _FakeDirectory_21(this, Invocation.method(#rename, [newPath])),
            ),
          )
          as _i7.Future<_i10.Directory>);

  @override
  _i10.Directory renameSync(String? newPath) =>
      (super.noSuchMethod(
            Invocation.method(#renameSync, [newPath]),
            returnValue: _FakeDirectory_21(
              this,
              Invocation.method(#renameSync, [newPath]),
            ),
          )
          as _i10.Directory);

  @override
  _i7.Future<_i10.FileSystemEntity> delete({bool? recursive = false}) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [], {#recursive: recursive}),
            returnValue: _i7.Future<_i10.FileSystemEntity>.value(
              _FakeFileSystemEntity_22(
                this,
                Invocation.method(#delete, [], {#recursive: recursive}),
              ),
            ),
          )
          as _i7.Future<_i10.FileSystemEntity>);

  @override
  void deleteSync({bool? recursive = false}) => super.noSuchMethod(
    Invocation.method(#deleteSync, [], {#recursive: recursive}),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Stream<_i10.FileSystemEntity> list({
    bool? recursive = false,
    bool? followLinks = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#list, [], {
              #recursive: recursive,
              #followLinks: followLinks,
            }),
            returnValue: _i7.Stream<_i10.FileSystemEntity>.empty(),
          )
          as _i7.Stream<_i10.FileSystemEntity>);

  @override
  List<_i10.FileSystemEntity> listSync({
    bool? recursive = false,
    bool? followLinks = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#listSync, [], {
              #recursive: recursive,
              #followLinks: followLinks,
            }),
            returnValue: <_i10.FileSystemEntity>[],
          )
          as List<_i10.FileSystemEntity>);

  @override
  _i7.Future<bool> exists() =>
      (super.noSuchMethod(
            Invocation.method(#exists, []),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  bool existsSync() =>
      (super.noSuchMethod(
            Invocation.method(#existsSync, []),
            returnValue: false,
          )
          as bool);

  @override
  _i7.Future<_i10.FileStat> stat() =>
      (super.noSuchMethod(
            Invocation.method(#stat, []),
            returnValue: _i7.Future<_i10.FileStat>.value(
              _FakeFileStat_23(this, Invocation.method(#stat, [])),
            ),
          )
          as _i7.Future<_i10.FileStat>);

  @override
  _i10.FileStat statSync() =>
      (super.noSuchMethod(
            Invocation.method(#statSync, []),
            returnValue: _FakeFileStat_23(
              this,
              Invocation.method(#statSync, []),
            ),
          )
          as _i10.FileStat);

  @override
  _i7.Stream<_i10.FileSystemEvent> watch({
    int? events = 15,
    bool? recursive = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#watch, [], {
              #events: events,
              #recursive: recursive,
            }),
            returnValue: _i7.Stream<_i10.FileSystemEvent>.empty(),
          )
          as _i7.Stream<_i10.FileSystemEvent>);
}

/// A class which mocks [File].
///
/// See the documentation for Mockito's code generation for more information.
class MockFile extends _i1.Mock implements _i10.File {
  MockFile() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.File get absolute =>
      (super.noSuchMethod(
            Invocation.getter(#absolute),
            returnValue: _FakeFile_24(this, Invocation.getter(#absolute)),
          )
          as _i10.File);

  @override
  String get path =>
      (super.noSuchMethod(
            Invocation.getter(#path),
            returnValue: _i11.dummyValue<String>(
              this,
              Invocation.getter(#path),
            ),
          )
          as String);

  @override
  Uri get uri =>
      (super.noSuchMethod(
            Invocation.getter(#uri),
            returnValue: _FakeUri_20(this, Invocation.getter(#uri)),
          )
          as Uri);

  @override
  bool get isAbsolute =>
      (super.noSuchMethod(Invocation.getter(#isAbsolute), returnValue: false)
          as bool);

  @override
  _i10.Directory get parent =>
      (super.noSuchMethod(
            Invocation.getter(#parent),
            returnValue: _FakeDirectory_21(this, Invocation.getter(#parent)),
          )
          as _i10.Directory);

  @override
  _i7.Future<_i10.File> create({
    bool? recursive = false,
    bool? exclusive = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#create, [], {
              #recursive: recursive,
              #exclusive: exclusive,
            }),
            returnValue: _i7.Future<_i10.File>.value(
              _FakeFile_24(
                this,
                Invocation.method(#create, [], {
                  #recursive: recursive,
                  #exclusive: exclusive,
                }),
              ),
            ),
          )
          as _i7.Future<_i10.File>);

  @override
  void createSync({bool? recursive = false, bool? exclusive = false}) =>
      super.noSuchMethod(
        Invocation.method(#createSync, [], {
          #recursive: recursive,
          #exclusive: exclusive,
        }),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<_i10.File> rename(String? newPath) =>
      (super.noSuchMethod(
            Invocation.method(#rename, [newPath]),
            returnValue: _i7.Future<_i10.File>.value(
              _FakeFile_24(this, Invocation.method(#rename, [newPath])),
            ),
          )
          as _i7.Future<_i10.File>);

  @override
  _i10.File renameSync(String? newPath) =>
      (super.noSuchMethod(
            Invocation.method(#renameSync, [newPath]),
            returnValue: _FakeFile_24(
              this,
              Invocation.method(#renameSync, [newPath]),
            ),
          )
          as _i10.File);

  @override
  _i7.Future<_i10.FileSystemEntity> delete({bool? recursive = false}) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [], {#recursive: recursive}),
            returnValue: _i7.Future<_i10.FileSystemEntity>.value(
              _FakeFileSystemEntity_22(
                this,
                Invocation.method(#delete, [], {#recursive: recursive}),
              ),
            ),
          )
          as _i7.Future<_i10.FileSystemEntity>);

  @override
  void deleteSync({bool? recursive = false}) => super.noSuchMethod(
    Invocation.method(#deleteSync, [], {#recursive: recursive}),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<_i10.File> copy(String? newPath) =>
      (super.noSuchMethod(
            Invocation.method(#copy, [newPath]),
            returnValue: _i7.Future<_i10.File>.value(
              _FakeFile_24(this, Invocation.method(#copy, [newPath])),
            ),
          )
          as _i7.Future<_i10.File>);

  @override
  _i10.File copySync(String? newPath) =>
      (super.noSuchMethod(
            Invocation.method(#copySync, [newPath]),
            returnValue: _FakeFile_24(
              this,
              Invocation.method(#copySync, [newPath]),
            ),
          )
          as _i10.File);

  @override
  _i7.Future<int> length() =>
      (super.noSuchMethod(
            Invocation.method(#length, []),
            returnValue: _i7.Future<int>.value(0),
          )
          as _i7.Future<int>);

  @override
  int lengthSync() =>
      (super.noSuchMethod(Invocation.method(#lengthSync, []), returnValue: 0)
          as int);

  @override
  _i7.Future<DateTime> lastAccessed() =>
      (super.noSuchMethod(
            Invocation.method(#lastAccessed, []),
            returnValue: _i7.Future<DateTime>.value(
              _FakeDateTime_25(this, Invocation.method(#lastAccessed, [])),
            ),
          )
          as _i7.Future<DateTime>);

  @override
  DateTime lastAccessedSync() =>
      (super.noSuchMethod(
            Invocation.method(#lastAccessedSync, []),
            returnValue: _FakeDateTime_25(
              this,
              Invocation.method(#lastAccessedSync, []),
            ),
          )
          as DateTime);

  @override
  _i7.Future<dynamic> setLastAccessed(DateTime? time) =>
      (super.noSuchMethod(
            Invocation.method(#setLastAccessed, [time]),
            returnValue: _i7.Future<dynamic>.value(),
          )
          as _i7.Future<dynamic>);

  @override
  void setLastAccessedSync(DateTime? time) => super.noSuchMethod(
    Invocation.method(#setLastAccessedSync, [time]),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<DateTime> lastModified() =>
      (super.noSuchMethod(
            Invocation.method(#lastModified, []),
            returnValue: _i7.Future<DateTime>.value(
              _FakeDateTime_25(this, Invocation.method(#lastModified, [])),
            ),
          )
          as _i7.Future<DateTime>);

  @override
  DateTime lastModifiedSync() =>
      (super.noSuchMethod(
            Invocation.method(#lastModifiedSync, []),
            returnValue: _FakeDateTime_25(
              this,
              Invocation.method(#lastModifiedSync, []),
            ),
          )
          as DateTime);

  @override
  _i7.Future<dynamic> setLastModified(DateTime? time) =>
      (super.noSuchMethod(
            Invocation.method(#setLastModified, [time]),
            returnValue: _i7.Future<dynamic>.value(),
          )
          as _i7.Future<dynamic>);

  @override
  void setLastModifiedSync(DateTime? time) => super.noSuchMethod(
    Invocation.method(#setLastModifiedSync, [time]),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<_i10.RandomAccessFile> open({
    _i10.FileMode? mode = _i10.FileMode.read,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#open, [], {#mode: mode}),
            returnValue: _i7.Future<_i10.RandomAccessFile>.value(
              _FakeRandomAccessFile_26(
                this,
                Invocation.method(#open, [], {#mode: mode}),
              ),
            ),
          )
          as _i7.Future<_i10.RandomAccessFile>);

  @override
  _i10.RandomAccessFile openSync({_i10.FileMode? mode = _i10.FileMode.read}) =>
      (super.noSuchMethod(
            Invocation.method(#openSync, [], {#mode: mode}),
            returnValue: _FakeRandomAccessFile_26(
              this,
              Invocation.method(#openSync, [], {#mode: mode}),
            ),
          )
          as _i10.RandomAccessFile);

  @override
  _i7.Stream<List<int>> openRead([int? start, int? end]) =>
      (super.noSuchMethod(
            Invocation.method(#openRead, [start, end]),
            returnValue: _i7.Stream<List<int>>.empty(),
          )
          as _i7.Stream<List<int>>);

  @override
  _i10.IOSink openWrite({
    _i10.FileMode? mode = _i10.FileMode.write,
    _i18.Encoding? encoding = const _i18.Utf8Codec(),
  }) =>
      (super.noSuchMethod(
            Invocation.method(#openWrite, [], {
              #mode: mode,
              #encoding: encoding,
            }),
            returnValue: _FakeIOSink_27(
              this,
              Invocation.method(#openWrite, [], {
                #mode: mode,
                #encoding: encoding,
              }),
            ),
          )
          as _i10.IOSink);

  @override
  _i7.Future<_i13.Uint8List> readAsBytes() =>
      (super.noSuchMethod(
            Invocation.method(#readAsBytes, []),
            returnValue: _i7.Future<_i13.Uint8List>.value(_i13.Uint8List(0)),
          )
          as _i7.Future<_i13.Uint8List>);

  @override
  _i13.Uint8List readAsBytesSync() =>
      (super.noSuchMethod(
            Invocation.method(#readAsBytesSync, []),
            returnValue: _i13.Uint8List(0),
          )
          as _i13.Uint8List);

  @override
  _i7.Future<String> readAsString({
    _i18.Encoding? encoding = const _i18.Utf8Codec(),
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readAsString, [], {#encoding: encoding}),
            returnValue: _i7.Future<String>.value(
              _i11.dummyValue<String>(
                this,
                Invocation.method(#readAsString, [], {#encoding: encoding}),
              ),
            ),
          )
          as _i7.Future<String>);

  @override
  String readAsStringSync({_i18.Encoding? encoding = const _i18.Utf8Codec()}) =>
      (super.noSuchMethod(
            Invocation.method(#readAsStringSync, [], {#encoding: encoding}),
            returnValue: _i11.dummyValue<String>(
              this,
              Invocation.method(#readAsStringSync, [], {#encoding: encoding}),
            ),
          )
          as String);

  @override
  _i7.Future<List<String>> readAsLines({
    _i18.Encoding? encoding = const _i18.Utf8Codec(),
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readAsLines, [], {#encoding: encoding}),
            returnValue: _i7.Future<List<String>>.value(<String>[]),
          )
          as _i7.Future<List<String>>);

  @override
  List<String> readAsLinesSync({
    _i18.Encoding? encoding = const _i18.Utf8Codec(),
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readAsLinesSync, [], {#encoding: encoding}),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  _i7.Future<_i10.File> writeAsBytes(
    List<int>? bytes, {
    _i10.FileMode? mode = _i10.FileMode.write,
    bool? flush = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #writeAsBytes,
              [bytes],
              {#mode: mode, #flush: flush},
            ),
            returnValue: _i7.Future<_i10.File>.value(
              _FakeFile_24(
                this,
                Invocation.method(
                  #writeAsBytes,
                  [bytes],
                  {#mode: mode, #flush: flush},
                ),
              ),
            ),
          )
          as _i7.Future<_i10.File>);

  @override
  void writeAsBytesSync(
    List<int>? bytes, {
    _i10.FileMode? mode = _i10.FileMode.write,
    bool? flush = false,
  }) => super.noSuchMethod(
    Invocation.method(#writeAsBytesSync, [bytes], {#mode: mode, #flush: flush}),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<_i10.File> writeAsString(
    String? contents, {
    _i10.FileMode? mode = _i10.FileMode.write,
    _i18.Encoding? encoding = const _i18.Utf8Codec(),
    bool? flush = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #writeAsString,
              [contents],
              {#mode: mode, #encoding: encoding, #flush: flush},
            ),
            returnValue: _i7.Future<_i10.File>.value(
              _FakeFile_24(
                this,
                Invocation.method(
                  #writeAsString,
                  [contents],
                  {#mode: mode, #encoding: encoding, #flush: flush},
                ),
              ),
            ),
          )
          as _i7.Future<_i10.File>);

  @override
  void writeAsStringSync(
    String? contents, {
    _i10.FileMode? mode = _i10.FileMode.write,
    _i18.Encoding? encoding = const _i18.Utf8Codec(),
    bool? flush = false,
  }) => super.noSuchMethod(
    Invocation.method(
      #writeAsStringSync,
      [contents],
      {#mode: mode, #encoding: encoding, #flush: flush},
    ),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<bool> exists() =>
      (super.noSuchMethod(
            Invocation.method(#exists, []),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  bool existsSync() =>
      (super.noSuchMethod(
            Invocation.method(#existsSync, []),
            returnValue: false,
          )
          as bool);

  @override
  _i7.Future<String> resolveSymbolicLinks() =>
      (super.noSuchMethod(
            Invocation.method(#resolveSymbolicLinks, []),
            returnValue: _i7.Future<String>.value(
              _i11.dummyValue<String>(
                this,
                Invocation.method(#resolveSymbolicLinks, []),
              ),
            ),
          )
          as _i7.Future<String>);

  @override
  String resolveSymbolicLinksSync() =>
      (super.noSuchMethod(
            Invocation.method(#resolveSymbolicLinksSync, []),
            returnValue: _i11.dummyValue<String>(
              this,
              Invocation.method(#resolveSymbolicLinksSync, []),
            ),
          )
          as String);

  @override
  _i7.Future<_i10.FileStat> stat() =>
      (super.noSuchMethod(
            Invocation.method(#stat, []),
            returnValue: _i7.Future<_i10.FileStat>.value(
              _FakeFileStat_23(this, Invocation.method(#stat, [])),
            ),
          )
          as _i7.Future<_i10.FileStat>);

  @override
  _i10.FileStat statSync() =>
      (super.noSuchMethod(
            Invocation.method(#statSync, []),
            returnValue: _FakeFileStat_23(
              this,
              Invocation.method(#statSync, []),
            ),
          )
          as _i10.FileStat);

  @override
  _i7.Stream<_i10.FileSystemEvent> watch({
    int? events = 15,
    bool? recursive = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#watch, [], {
              #events: events,
              #recursive: recursive,
            }),
            returnValue: _i7.Stream<_i10.FileSystemEvent>.empty(),
          )
          as _i7.Stream<_i10.FileSystemEvent>);
}
